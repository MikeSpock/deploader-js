window.dljs||(window.dljs=function(e,n){var o={},r=function(e){return o[e]&&o[e].isInited},t=function(e){if(!e)return!0;for(var n=!0,o=0;o<e.length;o++)r(e[o])||(n=!1);return n},d=function(e){var n=o[e];n.module=n.classCache(),n.isInited=!0},i=function(e){var n=o[e];return!!t(n.deps)&&(d(e),!0)},l=function(e){if(o[e]){if(o[e].isInited)return!0;console.log("module ",e,"not loaded, because");var n=o[e].deps;if(n.length){for(var r=!0,t=0;t<n.length;t++){var d=n[t];r=r&&l(d)}return r}return!0}return console.log(e,"not added to project or has not been loaded"),!1};return{load:function(e,n,r){if(o[e])return console&&console.log&&console.log("Module already loaded: "+e),null;o[e]={classCache:n,isInited:!1,deps:r};for(t=!0;t;){var t=!1;for(var d in o)if(!o[d].isInited){var l=i(d);t||(t=l)}}return o[e]},get:function(e,n){if(void 0===o[e])throw"Module '"+e+"' is not loaded. Check dependency in the end of your module definition.";return n?o[e].classCache:o[e].module},debug:l}}());
//# sourceMappingURL=dljs.min.js.map